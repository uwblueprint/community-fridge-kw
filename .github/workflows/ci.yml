# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main and staging branch
  push:
    branches:
      - main
      - staging 
  pull_request:
    branches:
      - main
      - staging

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "ci"
  ci:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      DB_TEST_HOST: ${{ secrets.DB_TEST_HOST }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
            path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
                ${{ runner.os }}-yarn-
          
      # Install dependencies
      - name: Install dependencies
        run: yarn --cwd ./frontend/ && yarn --cwd ./backend/typescript/
        
      - name: Build the docker-compose stack
        run: docker-compose -f docker-compose.ci.yml up -d
        
      - name: Check running containers
        run: docker ps -a

      # Linting check
      - name: Run lint for frontend
        working-directory: ./frontend
        run: yarn lint

      - name: Run lint for backend
        working-directory: ./backend/typescript
        run: yarn lint

      # Run tests
      - name: Run tests for frontend
        working-directory: ./frontend
        run: yarn test
      
      - name: Run tests for backend
        run: docker exec community-fridge-kw_ts-backend_1 yarn test
      
      
